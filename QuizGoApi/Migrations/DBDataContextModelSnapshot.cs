// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizGoApi.Data;

namespace QuizGoApi.Migrations
{
    [DbContext(typeof(DBDataContext))]
    partial class DBDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("QuizGoApi.Models.MCQ1Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CorrectOption");

                    b.Property<string>("OptionA");

                    b.Property<string>("OptionB");

                    b.Property<string>("OptionC");

                    b.Property<string>("OptionD");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("MCQ1Questions");
                });

            modelBuilder.Entity("QuizGoApi.Models.MCQ2Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsACorrect");

                    b.Property<bool>("IsBCorrect");

                    b.Property<bool>("IsCCorrect");

                    b.Property<bool>("IsDCorrect");

                    b.Property<string>("OptionA");

                    b.Property<string>("OptionB");

                    b.Property<string>("OptionC");

                    b.Property<string>("OptionD");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("MCQ2Questions");
                });

            modelBuilder.Entity("QuizGoApi.Models.SubjectiveQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerText");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("SubjectiveQuestions");
                });

            modelBuilder.Entity("QuizGoApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
